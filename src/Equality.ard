\func transport {A : \Type} (B : A -> \Type) {a a' : A} (p : a = a') (b : B a) : B a' =>
  coe (\lam i => B (p @ i)) b right

-- symmetry
\func inv {A : \Type} {a a' : A} (p : a = a') : a' = a
  => transport (\lam x => x = a) p idp

-- transitivity
\func trans {A : \Type} {a a' a'' : A} (p : a = a') (q : a' = a'') : a = a''
  => transport (\lam x => a = x) q p

-- congruence
\func pmap {A B : \Type} (f : A -> B) {a a' : A} (p : a = a') : f a = f a'
  => transport (\lam x => f a = f x) p idp

-- Exercise 1: Define congruence for functions with two arguments via transport. It is allowed to use any functions defined via transport.

\func pmap_2 {A B C : \Type} (f : A -> B -> C) {a a' : A} (pa : a = a') {b b' : B} (pb : b = b') : f a b = f a' b' =>
  pmap (\lam a => f a b) pa `trans` pmap (f a') pb
